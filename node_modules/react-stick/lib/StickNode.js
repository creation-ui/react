"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const substyle_1 = __importStar(require("substyle"));
const utils_1 = require("./utils");
const StickNode = (0, react_1.forwardRef)(function ({ children, width, align, position, sameWidth }, ref) {
    const styles = (0, substyle_1.default)(defaultStyle, {}, (0, utils_1.getModifiers)({ align, position, sameWidth }));
    return ((0, jsx_runtime_1.jsx)("div", { ...(0, substyle_1.inline)(styles, { width }), children: (0, jsx_runtime_1.jsx)("div", { ...styles('content'), ref: ref, children: children }) }));
});
const defaultStyle = {
    position: 'absolute',
    right: 0,
    bottom: 0,
    content: {
        // absolute position is needed as the stick node would otherwise
        // cover up the base node and, for instance, make it impossible to
        // click buttons
        position: 'absolute',
        display: 'inline-block',
        left: 'inherit',
        right: 'inherit',
        top: 'inherit',
        bottom: 'inherit',
    },
    '&sameWidth': {
        content: {
            display: 'block',
            width: '100%',
        },
    },
    '&align-left': {
        right: 'auto',
        left: 0,
    },
    '&align-top': {
        bottom: 'auto',
        top: 0,
    },
    '&align-middle': {
        content: {
            transform: 'translate(0, 50%)',
        },
    },
    '&align-center': {
        content: {
            transform: 'translate(50%, 0)',
        },
        '&align-middle': {
            content: {
                transform: 'translate(50%, 50%)',
            },
        },
    },
};
exports.default = StickNode;
//# sourceMappingURL=StickNode.js.map