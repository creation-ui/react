import {
  SSGContext
} from "./chunk-QT64ZMWO.mjs";
import {
  IS_PRODUCTION,
  NEXTRA_INTERNAL
} from "./chunk-P7XAM56D.mjs";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "./chunk-HIDP27A7.mjs";

// src/layout.ts
import { createElement } from "react";

// src/use-internals.ts
import { useRouter } from "next/router.js";
import { useEffect, useState } from "react";
function useInternals() {
  const __nextra_internal__ = globalThis[NEXTRA_INTERNAL];
  const { route } = useRouter();
  if (!IS_PRODUCTION) {
    const rerender = useState({})[1];
    useEffect(() => {
      const trigger = () => rerender({});
      const listeners = __nextra_internal__.refreshListeners;
      listeners[route] || (listeners[route] = []);
      listeners[route].push(trigger);
      return () => {
        listeners[route].splice(listeners[route].indexOf(trigger), 1);
      };
    }, [route]);
  }
  const context = __nextra_internal__.context[route];
  if (!context) {
    throw new Error(
      `No content found for the current route. This is a Nextra bug.`
    );
  }
  return {
    context,
    Layout: __nextra_internal__.Layout
  };
}

// src/layout.ts
function Nextra(props) {
  const { context, Layout } = useInternals();
  const _a = context, { Content } = _a, restContext = __objRest(_a, ["Content"]);
  return createElement(
    Layout,
    __spreadProps(__spreadValues({}, restContext), { pageProps: props }),
    createElement(
      SSGContext.Provider,
      { value: props },
      createElement(Content, props)
    )
  );
}
export {
  Nextra as default
};
